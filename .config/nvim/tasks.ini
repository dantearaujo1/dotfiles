[+]
build_sfml=-lsfml-graphics -lsfml-window -lsfml-system

[file-build]
command:c,cpp=g++ "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" $(+build_sfml)
command:rust=rustc "$(VIM_FILENAME)"
cwd=$(VIM_FILEDIR)
output=terminal
pos=tmux
save=1
[file-b&r]
command:c,cpp=g++ "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" && "./$(VIM_FILENOEXT)"
command:rust=rustc "$(VIM_FILENAME)" && ./"$(VIM_FILENOEXT)"
cwd=$(VIM_FILEDIR)
output=terminal
pos=tmux
save=1
[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="./$(VIM_FILENOEXT)"
command:go="$(VIM_PATHNOEXT)"
command:python=python3 "$(VIM_FILENAME)"
command:make=make -f "$(VIM_FILENAME)" run
command:emake=emake -e "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:bash=bash "$(VIM_FILENAME)"
command:fish=fish "$(VIM_FILENAME)"
command:php=php "$(VIM_FILENAME)"
command:erlang=escript "$(VIM_FILENAME)"
command:ps1=powershell -file "$(VIM_FILENAME)"
command:scala=scala "$(VIM_FILENAME)"
command:haskell=ghci "$(VIM_FILENAME)"
command:applescript=osascript "$(VIM_FILENAME)"
command:vim=:source %
command:rust=./"$(VIM_FILENOEXT)"
command:processing/win32=processing-java --sketch="$(VIM_FILEDIR)" --output="$(TEMP)"/vim-processing/"$(VIM_DIRNAME)" --force --run
command:processing/linux=processing-java --sketch=$(VIM_FILEDIR)/ --output=/tmp/vim-processing/$(VIM_DIRNAME) --force --run
output=terminal
pos=tmux
cwd=$(VIM_FILEDIR)
save=2

{cmake}
[project-init]
command:c,cpp,cmake=mkdir build && cd build && cmake .. -G "Unix Makefiles"
command:c,cpp,cmake/win32=mkdir build && cd build && cmake .. -G "MinGW Makefiles"
cwd=$(VIM_ROOT)
output=terminal
pos=tmux
errorformat=%f:%1:%m
[project-build]
command:c,cpp,cmake=cmake --build build
cwd=$(VIM_ROOT)
errorformat=%f:%1:%m
output=terminal
pos=tmux
close=1
[project-run]
command:c,cpp=build/$(VIM_PRONAME)
cwd=<root>
output=terminal
pos=tmux

{rust}
[project-init]
command:rust=cargo init
cwd=$(VIM_ROOT)
output=terminal
pos=tmux
errorformat=%f:%1:%m
[project-build]
command:rust=cargo build
cwd=$(VIM_ROOT)
errorformat=%f:%1:%m
output=terminal
pos=tmux
close=1
[project-run]
command:rust=cargo run
cwd=<root>
output=terminal
pos=tmux

{lua}
[Love2D]
command:lua=love ../$(VIM_DIRNAME)
cwd=$(VIM_ROOT)
output=terminal
pos=tmux
errorformat=%f:%1:%m
