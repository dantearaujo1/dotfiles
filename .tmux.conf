set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'
# better prefix key
unbind C-Space
unbind C-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# bind syncronization of panes
bind C-x setw synchronize-panes

# better splitting
bind | split-window -h -c '#{pane_current_path}'
bind \\ split-window -fh -c "#{pane_current_path}"
unbind \"
unbind C-i
bind - split-window -v -c "#{pane_current_path}"
bind "_" split-window -fv -c "#{pane_current_path}"
unbind %

# Quickly Swap Windows
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# Quickly source it
bind r source-file ~/.tmux.conf \: display 'Reloading our tmux configuration!'
# Set path to not go to our home path
bind c new-window -c '#{pane_current_path}'
bind C command-prompt -p "Window name:" "new-window; rename-window '%%'"
bind o command-prompt -p "Session name:" "new-session -s '%%'"
bind O command-prompt -p "Session rename:" "rename-session '%%'"


# Pane Management ===========================================================
# Resizing Pane
bind -r C-down resize-pane -D 15
bind -r C-up resize-pane -U 15
bind -r C-left resize-pane -L 15
bind -r C-right resize-pane -R 15


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \ | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \ | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# bind -n C-s run "($is_vim && tmux send-keys C-s) || \ tmux set-window-option synchronize-panes"
bind -n C-h run "($is_vim && tmux send-keys C-h) || \ tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \ ($is_fzf && tmux send-keys C-j) || \ tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \ ($is_fzf && tmux send-keys C-k)  || \ tmux select-pane -U"

bind -n C-l run  "($is_vim && tmux send-keys C-l) || \ tmux select-pane -R"

bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# unbind C-l
# unbind C-j
# unbind C-k
# unbind C-h
# Window Management =========================================================
bind k next-window
bind j previous-window

unbind n
unbind p


# Some key that i don't want to use inside vim
unbind C-v
bind-key -n C-v send-keys C-v

bind-key C-l send-keys C-u
# bind-key -n C-g run-shell -b "tmux send-keys 'lazygit' C-m"
bind-key -n C-v send-keys C-v
bind-key b set-option status # toogle statusbar

unbind C-j
bind-key -n C-p send-keys C-p
bind-key -n C-i send-keys C-i
# Increase History
set -g history-limit 5000

# Escape Time for VIM
set -sg escape-time 5

# Numbering Windows and Panes
set -g base-index 1
setw -g pane-base-index 1


# 256 colors support
# Use the first one
set-option -g default-terminal 'screen-256color'
set-option -sa terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'
set-option -sa terminal-overrides ',screen-256color:RGB'
set-option -sa terminal-features ',screen-256color:RGB'
# set-option -g default-terminal 'xterm-kitty'
# set-option -sa terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'
# set-option -sa terminal-overrides ',xterm-kitty:RGB'
# set-option -sa terminal-features ',xterm-kitty:RGB'

# sane scrolling
set -g mouse on

set -g renumber-windows on

# list of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'TheSast/tmux-nav-master'
set -g @plugin 'rickstaa/tmux-notify' # monitoring panes
set -g @plugin 'tmux-plugins/tmux-sidebar'
# ==================================================
# set -g @plugin 'kristijanhusak/tmux-simple-git-status'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'omerxx/tmux-floax'
# ==================================================
set -g @plugin 'trevarj/tmux-open-nvim'
set -g @fingers-pattern-0 "(([.\\w\\-~\\$@]+)(\\/?[\\w\\-@]+)+\\/?)\\.([\\w]+)(:\\d*:\\d*)?"
set -g @fingers-ctrl-action "xargs -I {} tmux run-shell 'cd #{pane_current_path}; ~/.tmux/plugins/tmux-open-nvim/scripts/ton {} > ~/.tmux/plugins/tmux-open-nvim/ton.log'"s
# =================================================
set -g @plugin 'Alkindi42/tmux-bitwarden'
set -g @bw-key 'T'
set -g @bw-session 'BW_SESSION'
set -g @bw-copy-to-clipboard 'on'

# Session Manager
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @ressurect-capture-pane-contents 'on'

# Setting vim keys in copy mode
setw -g mode-keys vi
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind-key -T copy-mode-vi y send -X copy-selection
bind-key -T copy-mode-vi v send -X begin-selection
bind p paste-buffer
bind -T copy-mode-vi Y send-keys -X copy-line
bind -T copy-mode-vi / command-prompt -i -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"

# Themes plugins
# set -g @plugin 'egel/tmux-gruvbox'
# set -g @tmux-gruvbox 'dark'
# set -g @plugin 'dracula/tmux'
# set -g @plugin 'arcticicestudio/nord-tmux'
# set -g @plugin '2kabhishek/tmux2k'
# set -g @plugin 'niksingh710/minimal-tmux-status'
# set -g @plugin 'catppuccin/tmux'
# set -g @catppuccin_flavour 'mocha' # or frappe, macchiato, mocha
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_status_icon_enable "yes"
# set -g @catppuccin_window_status_enable "yes"
# set -g @catppuccin_icon_window_last "Û∞ñ∞ "
# set -g @catppuccin_icon_window_current "Û∞ñØ "
# set -g @catppuccin_icon_window_zoom "Û∞Åå "
# set -g @catppuccin_icon_window_mark "Û∞ÉÄ "
# set -g @catppuccin_icon_window_silent "Û∞Çõ "
# set -g @catppuccin_icon_window_activity "Û±Ö´ "
# set -g @catppuccin_icon_window_bell "Û∞Çû "
# # set -g @catppuccin_window_default_text "#{b:pane_current_path}"
# set -g @catppuccin_window_default_text "#W"
# set -g @catppuccin_window_current_text "#W" # use "#W" for application instead of directory
# set -g @catppuccin_window_current_format_directory_text "#{b:pane_current_path}"
# set -g @catppuccin_window_format_directory_text "#{b:pane_current_path}"
# set -g @catppuccin_directory_text "#{b:pane_current_path}"
# set -g @catppuccin_status_background "default"
# set -g @catppuccin_status_justify "absolute-centre"
# set -g @catppuccin_status_modules_right "directory session"
# set -g @catppuccin_status_modules_left "running_command"


# Status Line =========================================================
set -g focus-events on
 set -g status-style bg=default
set -g status-left-length 90
set -g status-right-length 90
set-option -g status-position bottom
set -g status-justify left
# set -g status-right "üóÄ #{b:pane_current_path}"
set -g status-right "\uf365 #{b:session_name}   "
# set -g status-left "\uf365 #{b:session_name}   "
set -g status-left ""
set -g status-interval 1
set -g window-status-format "#[fg=default]#I#[default] #W"
set -g window-status-current-format "\uef4d #W \uef4d"
set -g window-status-current-style "fg=#ffffff bg=default"
set -g window-status-style fg=#ECF0C1
set -g status-bg default
set -g message-command-style "bg=#222222 fg=#cccccc"
set -g message-style "bg=default fg=#ffffff"



set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
# TMUX plugin manager (keep at the bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
